local cc = require "script/CClient"

local box_size = 46
local box_z = 0.3
local position = 1 --1~6
local p1_startX = 137
local p1_startY = 130

function init(self)
    cc.init(on_state_change)
    msg.post(".", "acquire_input_focus")
end

function on_state_change(state)
    local newstate = state.players[cc.id];
    pprint(newstate)
    if newstate.pos ~= position then
        position = newstate.pos
        go.animate("/p1", "position.x", go.PLAYBACK_ONCE_FORWARD, p1_startX + position * box_size, go.EASING_LINEAR, 0.1)
    end
end

function test_callback()
    print("test ok.")
end

function final(self)
    -- Add finalization code here
    -- Learn more: https://defold.com/manuals/script/
    -- Remove this function if not needed
end

function update(self, dt)
    -- Add update code here
    -- Learn more: https://defold.com/manuals/script/
    -- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
    if message_id == hash("on_gesture") then
        if message.swipe_right then
            print(message.swipe.from, message.swipe.to)
        elseif message.tap then
            print(message.tap.position)
        elseif message.double_tap then
            print(message.double_tap.position)
        elseif message.long_press then
            print(g.long_press.position, message.long_press.time)
        end
    end
end

function on_input(self, action_id, action)
    if action.released then
        if action_id == hash("left") then
            cc.send("move", { dir = "l" })
        elseif action_id == hash("right") then
            cc.send("move", { dir = "r" })
        elseif action_id == hash("up") then
            --
            local p = vmath.vector3(p1_startX + position * box_size, p1_startY+box_size, box_z)
            factory.create("/box#factory", p)
        end
    end

end

function on_reload(self)
    -- Add reload-handling code here
    -- Learn more: https://defold.com/manuals/hot-reload/
    -- Remove this function if not needed
end
